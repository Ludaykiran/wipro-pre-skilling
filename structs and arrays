Simple Inventory Management System: Introduction to C# Structs and Arrays
In this assignment, you will create a basic inventory management system using C#. You will define an array to store product information and implement functionalities to add, view, and update product records.

Task:

Define Product Structure:
Create a struct named Product to represent products.
Add fields to the struct: Name (string type), Price (decimal type), and Quantity (integer type).
Initialize Product Array:
Create an array of Product structs to store product information.
Define the array size based on the maximum number of products that can be stored in the inventory.
Implement Menu Options:
Display a menu with options to add a new product, view all products, and update product details.
Use a switch statement to handle user input and perform corresponding actions.
Input Handling:
Prompt the user to enter product details (name, price, quantity) when adding a new product.
Convert the user input for price and quantity to their respective data types.
Perform Operations:
Add a new product to the inventory when the user selects the "Add Product" option.
View all products in the inventory when the user selects the "View Products" option.
Update product details (price or quantity) when the user selects the "Update Product" option.

//code
using System;
struct Product
{
    // Define fields for product details
    public string Name; // Stores product name
    public decimal Price; // Stores product price
    public int Quantity; // Stores product quantity
     
    // Constructor to initialize the product fields
    public Product(string name, decimal price, int quantity)
    {
        Name = name;
        Price = price;
        Quantity = quantity;
    }
}

class Program
{
    static void Main()
    {
        // Maximum number of products allowed in inventory
        const int maxProducts = 5;

        // Array to store product records
        Product[] products = new Product[maxProducts];

        // Counter to track the number of added products
        int productCount = 0;

        while (true)
        {
            // Display menu options for user interaction
           // Console.WriteLine("\n===== Inventory Management System =====");
            Console.WriteLine("1. Add Product");
            Console.WriteLine("2. View Products");
            Console.WriteLine("3. Update Product");
            Console.WriteLine("4. Exit");
            Console.Write("Enter your choice: ");
            string choice = Console.ReadLine(); // Read user choice

            switch (choice)
            {
                case "1": // Add a new product
                    if (productCount < maxProducts)
                    {
                        Console.Write("Enter product name: ");
                        string name = Console.ReadLine();

                        Console.Write("Enter product price: ");
                        if (!decimal.TryParse(Console.ReadLine(), out decimal price))
                        {
                            Console.WriteLine("Invalid price input. Please enter a valid decimal number.");
                            break;
                        }

                        Console.Write("Enter product quantity: ");
                        if (!int.TryParse(Console.ReadLine(), out int quantity))
                        {
                            Console.WriteLine("Invalid quantity input. Please enter a valid integer.");
                            break;
                        }

                        // Add product to inventory
                        products[productCount] = new Product(name, price, quantity);
                        productCount++;
                        Console.WriteLine("Product added successfully!");
                    }
                    else
                    {
                        Console.WriteLine("Inventory is full! Cannot add more products.");
                    }
                    break;

                case "2": // View all products
                    if (productCount == 0)
                    {
                        Console.WriteLine("No products available in the inventory.");
                    }
                    else
                    {
                       // Console.WriteLine("\n===== Product Inventory =====");
                        for (int i = 0; i < productCount; i++)
                        {
                            Console.WriteLine($"Name: {products[i].Name}, Price: {products[i].Price:F1}, Quantity: {products[i].Quantity}");
                    }
                    }
                    break;

                case "3": // Update an existing product
                    Console.Write("Enter product name to update: ");
                    string updateName = Console.ReadLine();
                    bool found = false;

                    for (int i = 0; i < productCount; i++)
                    {
                        if (products[i].Name.Equals(updateName, StringComparison.OrdinalIgnoreCase))
                        {
                            found = true;
                            Console.Write("Enter new price: ");
                            if (!decimal.TryParse(Console.ReadLine(), out decimal newPrice))
                            {
                                Console.WriteLine("Invalid price input. Please enter a valid decimal number.");
                                break;
                            }

                            Console.Write("Enter new quantity: ");
                            if (!int.TryParse(Console.ReadLine(), out int newQuantity))
                            {
                                Console.WriteLine("Invalid quantity input. Please enter a valid integer.");
                                break;
                            }

                            // Update the product details
                            products[i].Price = newPrice;
                            products[i].Quantity = newQuantity;
                            Console.WriteLine("Product updated successfully!");
                            break;
                        }
                    }

                    if (!found)
                    {
                        Console.WriteLine("Product not found!");
                    }
                    break;

                case "4": // Exit the application
                    //Console.WriteLine("Exiting program. Thank you!");
                    return;

                default:
                    Console.WriteLine("Invalid choice, please try again.");
                    break;
            }
        }
    }
}
